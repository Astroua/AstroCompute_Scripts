#detailed explanation of all parameters in param file

target: name of target source; string

obsDate: observation date to distinguish between different epochs of the same source; string

refFrequency: frequency band of observations; string

intervalSizeX: time bin size, H is hours (integer), M is minutes (integer), S is seconds (integer or float)

visibility: path to CASA MS; string

imageSize: image size in pixels; integer

numberIters: max number iterations in clean; integer, default is 5000

cellSize: cell size in arcseconds; string, 'XXarcsec'

taylorTerms: number of taylor terms to use; integer, default is 1

myStokes: stokes parameter; string, default is 'I'

thre: cleaning threshold; string, default is '1mJy'

spw_choice: spectral window selection, string

robust: Briggs robust parameter; integer, set when weighting='briggs', range from -2[uniform] to 2[natural], default is 0.0

weighting: Image weighting, string; options are 'natural', 'uniform', or 'briggs'

mask_option: specify choice of clean mask; string, options are 'box' (just targetBox around source), 'file' (provide own
mask file specified in mask_file parameter), or 'aegean' (box around all detected sources from Aegean script if run)

mask_file: path to mask file if mask_option='file'; string

var_anal: toggle to do variability analysis; string, options are 'T' or 'F'

power_spec: toggle to make power spectra; string, options are 'T' or 'F'

seed: seed threashold (i.e., peak pixels) for aegean in sigmas; integer, default is 5

flood: flood threashold (i.e., surrounding pixels) for aegean in sigmas; integer, default is 4

tele: telescope for latutude determination by aegean; string, default is 'VLA'

lat: only set if not on list (VLA, SMA, NOEMA) in scope2lat func of aegean.py; string

runObj: toggle to run object detection; string, options are 'T' or 'F'; **hard coded to 'F'

targetBox: target box in pixels, only set if not doing object detection or mask_option='box'; string ('X1,Y1,X2,Y2')

outlierFile: provide path to outlier file for clean if needed; string

runClean: toggle to run clean, if off can refit a data set provided images were saved (if saved images a cutout 
then fit_cutout must be 'T'); string, options are 'T' or 'F' or 'U' (only uv plane); **hard coded to 'T'

fix_pos: toggle to fix position in individual images to that of whole data set fit; string, options are 'T' or 'F'

do_monte: toggle to monte carlo sample position of full data set if fix_pos='T'; string, options are 'T' or 'F'

integ_fit: toggle to write both integrated and peak flux to data file; string, options are 'B' (both), 'T' (integrated only),
'F' (peak only), default is 'B';

uv_fit: toggle to do uv plane fitting; string, options are 'T' or 'F'

uv_fix: toggle to fix position in uv fitting from position of whole data set; string, options are 'T' or 'F'

def_times: toggle to manually define start and end times (next 6 params), default is start and end of observation; string,
options are 'T' or 'F'

startTimeX: manual start time in format integer hour, minute, second; string, only set if def_times='T'

endTimeX: manual end time in format integer hour, minute, second; string, only set if def_times='T'

startX: manual start date in format integer day, month, year; string, only set if def_times='T'

endX: manual end date in format integer day, month, year; string, only set if def_times='T'

lc_scale_unit: unit for lightcurve flux density; string, options are '' (Jy), 'm' (mJy), 'u' (microJy), default is 'm'

lc_scale_time: unit for lightcurve time; string, options are 'H' (hours), 'M' (minutes), 'S' (seconds), default is 'M'